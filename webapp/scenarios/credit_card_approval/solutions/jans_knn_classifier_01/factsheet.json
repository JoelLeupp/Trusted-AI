{
    "general": {
        "target_column": "Target"
    },
    "fairness": {
        "question_fairness": 3,
        "protected_feature": "Group",
        "protected_group": "lambda x: x[protected_feature] == 0",
        "favorable_outcome": "lambda x: x[target_column] == 1"
    },
    "explainability": {},
    "robustness": {},
    "methodology": {},
    "scores": {
        "fairness": {
            "question_fairness": 3,
            "class_balance": 1,
            "underfitting": NaN,
            "overfitting": 5,
            "statistical_parity_difference": 1,
            "equal_opportunity_difference": NaN,
            "average_odds_difference": NaN,
            "disparate_impact": NaN,
            "theil_index": NaN,
            "euclidean_distance": NaN,
            "mahalanobis_distance": NaN,
            "manhattan_distance": NaN
        },
        "explainability": {
            "algorithm_class": 3,
            "correlated_features": 5,
            "model_size": 5,
            "feature_relevance": NaN
        },
        "robustness": {
            "confidence_score": 5,
            "clique_method": NaN,
            "loss_sensitivity": NaN,
            "clever_score": NaN,
            "empirical_robustness_fast_gradient_attack": NaN,
            "empirical_robustness_carlini_wagner_attack": NaN,
            "empirical_robustness_deepfool_attack": NaN
        },
        "methodology": {
            "normalization": 1,
            "missing_data": 5,
            "regularization": NaN,
            "train_test_split": 5,
            "factsheet_completeness": 1
        }
    },
    "properties": {
        "fairness": {
            "question_fairness": {
                "Question Fairness": "3"
            },
            "class_balance": {
                "class balance score": 1
            },
            "underfitting": {},
            "overfitting": {
                "Conclusion": "Model is not overfitting",
                "Training Accuracy": 0.927935,
                "Test Accuracy": 0.9192,
                "Train Test Accuracy Difference": 0.008734999999999937
            },
            "statistical_parity_difference": {
                "Favored Majority Ratio": 0.5743349529835355,
                "Favored Minority Ratio": 0.19789638099433796,
                "Statistical Parity Difference": -0.3764385719891976
            },
            "equal_opportunity_difference": {},
            "average_odds_difference": {},
            "disparate_impact": {},
            "theil_index": {},
            "euclidean_distance": {},
            "mahalanobis_distance": {},
            "manhattan_distance": {}
        },
        "explainability": {
            "algorithm_class": {
                "clf_name": [
                    "model type",
                    "KNeighborsClassifier"
                ]
            },
            "correlated_features": {
                "pct_drop": [
                    "Percentage of highly correlated features",
                    "0.00%"
                ]
            },
            "model_size": {
                "n_features": [
                    "number of features",
                    6
                ]
            },
            "feature_relevance": null
        },
        "robustness": {
            "confidence_score": {
                "confidence_score": [
                    "Average confidence score",
                    "91.19%"
                ]
            },
            "clique_method": {},
            "loss_sensitivity": {},
            "clever_score": {},
            "empirical_robustness_fast_gradient_attack": {},
            "empirical_robustness_carlini_wagner_attack": {},
            "empirical_robustness_deepfool_attack": {}
        },
        "methodology": {
            "normalization": {
                "Training_mean": [
                    "Mean of the training data",
                    "14500.11"
                ],
                "Training_std": [
                    "Standard deviation of the training data",
                    "4591.62"
                ],
                "Test_mean": [
                    "Mean of the test data",
                    "14510.61"
                ],
                "Test_std": [
                    "Standard deviation of the test data",
                    "4596.55"
                ],
                "normalization": [
                    "Normalization",
                    "None"
                ]
            },
            "missing_data": {
                "null_values": [
                    "Number of the null values",
                    "0"
                ]
            },
            "regularization": {
                "regularization_technique": [
                    "Regularization technique",
                    "not specified"
                ]
            },
            "train_test_split": {
                "train_test_split": [
                    "Train test split",
                    "80.00/20.00"
                ]
            },
            "factsheet_completeness": {
                "model_name": [
                    "(Factsheet Property) model_name",
                    "missing"
                ],
                "purpose_description": [
                    "(Factsheet Property) purpose_description",
                    "missing"
                ],
                "domain_description": [
                    "(Factsheet Property) domain_description",
                    "missing"
                ],
                "training_data_description": [
                    "(Factsheet Property) training_data_description",
                    "missing"
                ],
                "model_information": [
                    "(Factsheet Property) model_information",
                    "missing"
                ],
                "target_column": [
                    "(Factsheet Property) target_column",
                    "present"
                ],
                "authors": [
                    "(Factsheet Property) authors",
                    "missing"
                ],
                "contact_information": [
                    "(Factsheet Property) contact_information",
                    "missing"
                ]
            }
        }
    }
}