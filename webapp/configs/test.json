{
    "fairness": {
        "parameters": {
            "score_Statistical_Parity": {
                "parameter_XY": {
                    "value": "The value of the parameter_XY",
                    "description": "The description of the paramter and its impact"
                }
            }
        },
        "weights": {
            "Statistical_Parity": 0.16666666666666666,
            "Disparate_Mistreatment": 0.16666666666666666,
            "Class_Imbalance": 0.16666666666666666,
            "Biased_Data": 0.16666666666666666,
            "Disparate_Treatment": 0.16666666666666666,
            "Disparate_Impact": 0.16666666666666666
        }
    },
    "explainability": {
        "parameters": {
            "score_Algorithm_Class": {
                "clf_type_score": {
                    "value": {
                        "RandomForestClassifier": 3,
                        "KNeighborsClassifier": 3,
                        "SVC": 2,
                        "GaussianProcessClassifier": 3,
                        "DecisionTreeClassifier": 4,
                        "MLPClassifier": 1,
                        "AdaBoostClassifier": 3,
                        "GaussianNB": 3.5,
                        "QuadraticDiscriminantAnalysis": 3,
                        "LogisticRegression": 3,
                        "LinearRegression": 3.5
                    },
                    "description": "Mapping of Learning techniques to the level of explainability based on on literature research and qualitative analysis of each learning technique. For more information see gh-pages/explainability/taxonomy"
                }
            },
            "score_Feature_Relevance": {
                "scale_factor": {
                    "value": 1.5,
                    "description": "Used for the calculation to detect outliers in a dataset with the help of quartiels and the Interquartile Range (Q3-Q1) for example the lower bound for outliers is then calculated as follows: lw = Q1-scale_factor*IQR"
                },
                "distri_threshold": {
                    "value": 0.6,
                    "description": "Used for the calulation of how many features make up the a certain fraction (distri_threshold) of all importance. For example if the distri_threshold is 0.6 and the result would be 10% than this would mean that 10% of the used features concentrate 60% of all feature importance, which would mean that the importance of the features is not well balanced where only a few features are important for the classification and the majority of features has only very little or no impact at all"
                }
            }
        },
        "weights": {
            "Algorithm_Class": 0.55,
            "Correlated_Features": 0.15,
            "Model_Size": 0.15,
            "Feature_Relevance": 0.15
        }
    },
    "robustness": {
        "parameters": {
            "score_Confidence_Score": {
                "parameter_XY": {
                    "value": "The value of the parameter_XY",
                    "description": "The description of the paramter and its impact"
                }
            }
        },
        "weights": {
            "Confidence_Score": 0.2,
            "Clique_Method": 0.2,
            "Loss_Sensitivity": 0.2,
            "CLEVER_Score": 0.2,
            "Empirical_Robustness_Fast_Gradient_Attack": 0.2,
            "Empirical_Robustness_Carlini_Wagner_Attack": 0.2,
            "Empirical_Robustness_Deepfool_Attack": 0.2
        }
    },
    "methodology": {
        "parameters": {
            "score_Normalization": {
                "parameter_XY": {
                    "value": "The value of the parameter_XY",
                    "description": "The description of the paramter and its impact"
                }
            }
        },
        "weights": {
            "Normalization": 0.16666666666666666,
            "Treatment_of_Corrupt_Values": 0.16666666666666666,
            "Train_Test_Split": 0.16666666666666666,
            "Regularization": 0.16666666666666666,
            "Treatment_of_Categorical_Features": 0.16666666666666666,
            "Feature_Filtering": 0.16666666666666666
        }
    },
    "pillars": {
        "fairness": 0.25,
        "explainability": 5.0,
        "robustness": 0.25,
        "methodology": 0.25
    }
}