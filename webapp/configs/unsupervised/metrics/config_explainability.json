{
  "parameters": {
    "score_model_size": {
      "thresholds": {
        "value": [
          10,
          25,
          50,
          100
        ],
        "description": "Thresholds of how to map model size to a score from 1-5. Example if 10 is the first number it means that a model with 10 or less features would get the best score(5) and if 500 was the last number it would mean that a model with 500 or more features would get the worst score (1), analog for the numbers in between",
        "label": "Score Thresholds"
      }
    },
    "score_permutation_feature_importance": {
        "thresholds": {
            "value": [
              0.2,
              0.15,
              0.1,
              0.05
            ],
            "description": "TODO Map the fraction of many features make up 60% of all importance to a Score from 1-5. If the first number in the list is 0.05 it means that 5% or less features make up more than 60% of all importance, which would be a very skewed distribution of the feature importance and result in the worst score of 1, and if the next number is 0.1 it means if the fraction is between 5%-10% the Score would be a 2, analog the other thresholds",
            "label": "Score Thresholds"
        }
    },
    "score_correlated_features": {
	  "high_cor": {
		"value": 0.95,
		"description": "Threshold value to classify a correlation as highly correlated. Default value is 0.95 meaning every correlation equal or higher than 0.9 would be considered highly correlated",
        "label": "High Correlation Threshold"
	  },
      "thresholds": {
        "value": [
          0.05,
          0.15,
          0.25,
          0.4
        ],
        "description": "Thresholds of how to map the percentage of highly correlated features (>= high_cor or default 0.9) to a score from 1-5. Example if 0.05 is the first number it means that training dataset with 5% or less highly correlated variables would get the best score(5) and if 0.4 was the last number it would mean that a training dataset 40% or more highly correlated features would get the worst score (1), analog for the numbers in between",
        "label": "Score Thresholds"
      }
    }
  },
  "weights": {
    "correlated_features": 0.15,
    "model_size": 0.15,
    "permutation_feature_importance": 0.15
  },
   "metrics": {
    "correlated_features": "This metric counts the percentage of of highly correlated features.<br>Correlated features negatively influece the level of explainability of a model.",
    "permutation_feature_importance": "This metric computes the importance of each feature.",
    "model_size": "This metrics counts the number of features.<br>A smaller features space generally means a simpler and more comprehensible model<br>which benefits explainability"
  }
}